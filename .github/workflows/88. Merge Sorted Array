class Solution(object):
    def merge(self, nums1, m, nums2, n):
        """
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: None Do not return anything, modify nums1 in-place instead.
        """
        # Start from the end of nums1 and nums2
        # and merge them from back to front
        while m > 0 and n > 0:
            if nums1[m - 1] > nums2[n - 1]:
                nums1[m + n - 1] = nums1[m - 1]
                m -= 1
            else:
                nums1[m + n - 1] = nums2[n - 1]
                n -= 1
        # If there are any elements left in nums2, they are the smallest
        # and should be placed at the beginning of nums1
        nums1[:n] = nums2[:n]

# Create an instance of the solution
solution = Solution()

# Example 1
nums1 = [1, 2, 3, 0, 0, 0]
m = 3
nums2 = [2, 5, 6]
n = 3
solution.merge(nums1, m, nums2, n)
print("Example 1:", nums1)

# Example 2
nums1 = [1]
m = 1
nums2 = []
n = 0
solution.merge(nums1, m, nums2, n)
print("Example 2:", nums1)

# Example 3
nums1 = [0]
m = 0
nums2 = [1]
n = 1
solution.merge(nums1, m, nums2, n)
print("Example 3:", nums

##https://leetcode.com/problems/merge-sorted-array/submissions/1181373332?envType=study-plan-v2&envId=top-interview-150
